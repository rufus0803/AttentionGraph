import seaborn as sns
import matplotlib.pyplot as plt
import numpy as np
import pandas as pd
import seaborn as sns
import matplotlib.pyplot as plt
import numpy as np
import pandas as pd
# 生成示例数据
data = {
    'DeepFRI': {
        'IC<6': [0.3257194420838662, 0.263939940580615, 0.4095928807521749, 0.3453438243557343, 0.4961706141447211, 0.3198075285653219, 0.4792294925706345, 0.5466744585150886, 0.14163393518213485, 0.46173844459071609],
        '6<IC<12': [0.2610313589469955, 0.1984869637051671, 0.165577930409789, 0.1735185862292798, 0.14251893341589017, 0.2520615226088939, 0.05152294163143, 0.17711292538520929, 0.1485690496157056, 0.127080676090864],
        'IC>12': [0.0661205722590955, 0.07403815123316815, 0.036890307953809764, 0.09744867795493233, 0.1200508411353456, 0.11882212076041399, 0.11656753877827153, 0.0159300832640972, 0.02368424256570934, 0.0276781949571334]
    },
    'HEAL': {
        'IC<6': [0.4902834476152876, 0.43241245517995475, 0.60913973616419996, 0.49151639354470997, 0.5351256687742763, 0.19003334830416618, 0.48248828599579474, 0.7119643711522721, 0.51031716372759248, 0.5002877934738453],
        '6<IC<12': [0.3068256705186488, 0.3065985246870097, 0.4634934690237382, 0.3164813992627066, 0.21855326833956459, 0.3800454527396508, 0.2821568577854797, 0.38281675718585879, 0.2747419654137433, 0.2913437990482934],
        'IC>12': [0.14656003722384203, 0.24668864012521485, 0.012466991375338465, 0.2196492861043148, 0.26752670886148067, 0.1483269986896208, 0.2129394294216808, 0.0242897779834648, 0.0980320138678187, 0.24819838289521778]
    },
    'Struct2GO': {
        'IC<6': [0.5713771002053169, 0.6116942701137564, 0.45332216968474435, 0.586124510088624, 0.81537099460633393, 0.6292334476128385, 0.5753983619938363, 0.7022417449948586, 0.72998929047868502, 0.6349253568225251],
        '6<IC<12': [0.3885428365094091, 0.5121936737797324, 0.408818988155298, 0.4431225846932675, 0.32716578242656094, 0.3672928563915525, 0.1167504029625498, 0.43214866780299372, 0.3647319400231573, 0.46385375810813967],
        'IC>12': [0.1697866032836083, 0.13881202633761127, 0.04519304198501866, 0.234550741783169, 0.1747880406869315, 0.253356729971296, 0.3104407553588696, 0.22221059888330153, 0.13664714905562467, 0.2291393234846737]
    },
    'SEA-GO': {
        'IC<6': [0.7075322702188562, 0.61490223274003579, 0.72558808149482275, 0.89789686478880244, 0.6975730273599903, 0.7347846251526108, 0.63409527056515074, 0.7046122371829258, 0.65464032986730388, 0.8090037728307126],
        '6<IC<12': [0.414579352508045, 0.577833454818722, 0.48818045393832894, 0.31287272651518352, 0.3416253577831827, 0.45674496948002496, 0.5483082874926555, 0.40639689355300319, 0.5224390113833272, 0.42995115735952383],
        'IC>12': [0.3363075464331126, 0.2167365395154338, 0.2274906121975396, 0.3635432441156256, 0.2374347126342143, 0.1720033809028109, 0.2755271149023973, 0.13647513966546778, 0.1836711522695655, 0.28103602036561856]
    }
}

df_list = []

for group, values in data.items():
    for condition, numbers in values.items():
        df_list.append(pd.DataFrame({'Group': group, 'Condition': condition, 'Value': numbers}))

df = pd.concat(df_list, ignore_index=True)

# 使用seaborn的violinplot绘制Violin Plot，并添加箱线
plt.figure(figsize=(12, 8))
sns.violinplot(x='Condition', y='Value', hue='Group', data=df, inner="box", palette="muted")
plt.xlabel('Information Content', fontsize=14)
plt.ylabel('AUPRC', fontsize=14)
plt.legend()
plt.savefig('/Users/rufus/Downloads/Fig4.png', dpi=500)
plt.show()